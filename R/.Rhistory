hist(data[,3],breaks=100)
hist(data[,4],breaks=100)
<- read.csv("~/Documents/Transfers/outdrive/Data/Data/temp/ALL/chr1/3000/both/384.inbinomial.bed")
data <- read.csv("~/Documents/Transfers/outdrive/Data/Data/temp/ALL/chr1/3000/both/384.inbinomial.bed")
plot(data[,1],data[,7],type='l')
lines(data[,1],data[,8],type='l',col="red")
lines(data[,1],data[,5],type='l',col="green")
lines(data[,1],data[,6],type='l',col="blue")
raw <- read.csv("~/Documents/Transfers/outdrive/Data/Data/temp/ALL/chr1/3000/both/384.in")
head(raw)
rm(raw)
`384` <- read.delim("~/Documents/Transfers/outdrive/Data/Data/temp/ALL/chr1/3000/both/384.in", header=FALSE)
View(`384`)
raw<-`384`
plot(raw[,2],raw[,6])
plot(raw[,2],raw[,7])
plot(raw[,2],raw[,7],type='l')
par(new = TRUE)
plot(data[,1],data[,7],type='l')
plot(data[,1],data[,7],type='l')
plot(raw[,2],raw[,6],pch='x')
plot(raw[800:900,2],raw[,6],pch='x')
plot(raw[800:900,2],raw[800:900,6],pch='x')
plot(raw[700:900,2],raw[700:900,6],pch='x')
points(raw[700:900,2],raw[700:900,3],pch='+')
plot(raw[700:900,2],raw[700:900,6],pch='x')
par(new = TRUE)
plot(data[700:900,1],data[700:900,7],type='l')
lines(data[700:900,1],data[700:900,8],type='l',col="red")
plot(raw[700:900,2],raw[700:900,6],pch='x')
plot(raw[700:900,2],raw[700:900,7],pch='x')
points(raw[700:900,2],raw[700:900,9],pch='x')
points(raw[700:900,2],raw[700:900,11],pch='x')
points(raw[700:900,2],raw[700:900,11],pch='x')
points(raw[700:900,2],raw[700:900,13],pch='x')
points(raw[700:900,2],raw[700:900,15],pch='x',col='red')
points(raw[700:900,2],raw[700:900,17],pch='x',col='red')
points(raw[700:900,2],raw[700:900,19],pch='x',col='red')
points(raw[700:900,2],raw[700:900,21],pch='x',col='red')
par(new = TRUE)
plot(data[,1],data[,7],type='l')
lines(data[,1],data[,8],type='l',col="red")
plot(raw[700:900,2],raw[700:900,7],pch='x')
points(raw[700:900,2],raw[700:900,9],pch='x')
points(raw[700:900,2],raw[700:900,11],pch='x')
points(raw[700:900,2],raw[700:900,11],pch='x')
points(raw[700:900,2],raw[700:900,13],pch='x')
points(raw[700:900,2],raw[700:900,15],pch='x',col='red')
points(raw[700:900,2],raw[700:900,17],pch='x',col='red')
points(raw[700:900,2],raw[700:900,19],pch='x',col='red')
points(raw[700:900,2],raw[700:900,21],pch='x',col='red')
par(new = TRUE)
plot(data[700:900,1],data[700:900,7],type='l')
lines(data[700:900,1],data[700:900,8],type='l',col="red")
lines(data[700:900,1],data[700:900,5],type='l',col="green")
lines(data[700:900,1],data[700:900,6],type='l',col="blue")
plot(raw[746:754,2],raw[746:754,7],pch='x')
plot(raw[746:754,2],raw[746:754,7],pch='x',ylim=c(0,40))
points(raw[746:754,2],raw[746:754,9],pch='x')
points(raw[746:754,2],raw[746:754,11],pch='x')
points(raw[746:754,2],raw[746:754,11],pch='x')
points(raw[746:754,2],raw[746:754,13],pch='x')
points(raw[746:754,2],raw[746:754,15],pch='x',col='red')
points(raw[746:754,2],raw[746:754,17],pch='x',col='red')
points(raw[746:754,2],raw[746:754,19],pch='x',col='red')
points(raw[746:754,2],raw[746:754,21],pch='x',col='red')
par(new = TRUE)
plot(data[746:754,1],data[746:754,7],type='l')
lines(data[746:754,1],data[746:754,8],type='l',col="red")
plot(raw[746:754,2],raw[746:754,7],pch='x',ylim=c(0,40))
points(raw[746:754,2],raw[746:754,9],pch='x')
points(raw[746:754,2],raw[746:754,11],pch='x')
points(raw[746:754,2],raw[746:754,11],pch='x')
points(raw[746:754,2],raw[746:754,13],pch='x')
points(raw[746:754,2],raw[746:754,15],pch='x',col='red')
points(raw[746:754,2],raw[746:754,17],pch='x',col='red')
points(raw[746:754,2],raw[746:754,19],pch='x',col='red')
points(raw[746:754,2],raw[746:754,21],pch='x',col='red')
par(new = TRUE)\
plot(raw[746:754,2],raw[746:754,7],pch='x',ylim=c(0,40))
points(raw[746:754,2],raw[746:754,9],pch='x')
points(raw[746:754,2],raw[746:754,11],pch='x')
points(raw[746:754,2],raw[746:754,11],pch='x')
points(raw[746:754,2],raw[746:754,13],pch='x')
points(raw[746:754,2],raw[746:754,15],pch='x',col='red')
points(raw[746:754,2],raw[746:754,17],pch='x',col='red')
points(raw[746:754,2],raw[746:754,19],pch='x',col='red')
points(raw[746:754,2],raw[746:754,21],pch='x',col='red')
par(new = TRUE)
plot(raw[746:754,2],raw[746:754,7],pch='x',ylim=c(0,40))
points(raw[746:754,2],raw[746:754,9],pch='x')
points(raw[746:754,2],raw[746:754,11],pch='x')
points(raw[746:754,2],raw[746:754,11],pch='x')
points(raw[746:754,2],raw[746:754,13],pch='x')
points(raw[746:754,2],raw[746:754,15],pch='x',col='red')
points(raw[746:754,2],raw[746:754,17],pch='x',col='red')
points(raw[746:754,2],raw[746:754,19],pch='x',col='red')
points(raw[746:754,2],raw[746:754,21],pch='x',col='red')
par(new = TRUE)
plot(raw[746:754,2],raw[746:754,7],pch='x',ylim=c(0,40))
points(raw[746:754,2],raw[746:754,9],pch='x')
points(raw[746:754,2],raw[746:754,11],pch='x')
points(raw[746:754,2],raw[746:754,11],pch='x')
points(raw[746:754,2],raw[746:754,13],pch='x')
points(raw[746:754,2],raw[746:754,15],pch='x',col='red')
points(raw[746:754,2],raw[746:754,17],pch='x',col='red')
points(raw[746:754,2],raw[746:754,19],pch='x',col='red')
points(raw[746:754,2],raw[746:754,21],pch='x',col='red')
par(new = TRUE)
plot(data[746:754,1],data[746:754,7],type='l',ylim=c(0,1))
lines(data[746:754,1],data[746:754,8],type='l',col="red")
lines(data[700:900,1],data[700:900,5],type='l',col="green")
plot(raw[746:754,2],raw[746:754,7],pch='x',ylim=c(0,40))
points(raw[746:754,2],raw[746:754,9],pch='x')
points(raw[746:754,2],raw[746:754,11],pch='x')
points(raw[746:754,2],raw[746:754,11],pch='x')
points(raw[746:754,2],raw[746:754,13],pch='x')
points(raw[746:754,2],raw[746:754,15],pch='x',col='red')
points(raw[746:754,2],raw[746:754,17],pch='x',col='red')
points(raw[746:754,2],raw[746:754,19],pch='x',col='red')
points(raw[746:754,2],raw[746:754,21],pch='x',col='red')
par(new = TRUE)
plot(data[746:754,1],data[746:754,7],type='l',ylim=c(0,1))
lines(data[746:754,1],data[746:754,8],type='l',col="red")
lines(data[746:754,1],data[746:754,5],type='l',col="green")
lines(data[746:754,1],data[746:754,6],type='l',col="blue")
plot(raw[740:760,2],raw[740:760,7],pch='x',ylim=c(0,40))
points(raw[740:760,2],raw740:760,9],pch='x')
points(raw[740:760,2],raw[740:760,11],pch='x')
points(raw[740:760,2],raw[740:760,11],pch='x')
points(raw[740:760,2],raw[740:760,13],pch='x')
points(raw[740:760,2],raw[740:760,15],pch='x',col='red')
points(raw[740:760,2],raw[740:760,17],pch='x',col='red')
points(raw[740:760,2],raw[740:760,19],pch='x',col='red')
points(raw[740:760,2],raw[740:760,21],pch='x',col='red')
par(new = TRUE)
plot(data[740:760,1],data[740:760,7],type='l',ylim=c(0,1))
lines(data[740:760,1],data[740:760,8],type='l',col="red")
lines(data[740:760,1],data[740:760,5],type='l',col="green")
lines(data[740:760,1],data[740:760,6],type='l',col="blue")
plot(raw[740:760,2],raw[740:760,6]/raw[740:760,7],pch='x',ylim=c(0,1))
points(raw[740:760,2],raw[740:760,8]/raw[740:760,9],pch='x')
points(raw[740:760,2],raw[740:760,10]/raw[740:760,11],pch='x')
points(raw[740:760,2],raw[740:760,12]/raw[740:760,13],pch='x')
points(raw[740:760,2],raw[740:760,14]/raw[740:760,15],pch='x',col='red')
points(raw[740:760,2],raw[740:760,16]/raw[740:760,17],pch='x',col='red')
points(raw[740:760,2],raw[740:760,18]/raw[740:760,19],pch='x',col='red')
points(raw[740:760,2],raw[740:760,20]/raw[740:760,21],pch='x',col='red')
par(new = TRUE)
plot(data[740:760,1],data[740:760,7],type='l',ylim=c(0,1))
lines(data[740:760,1],data[740:760,8],type='l',col="red")
lines(data[740:760,1],data[740:760,5],type='l',col="green")
lines(data[740:760,1],data[740:760,6],type='l',col="blue")
plot(raw[,2],raw[,6]/raw[,7],pch='x',ylim=c(0,1))
points(raw[,2],raw[,8]/raw[0,9],pch='x')
points(raw[,2],raw[,10]/raw[,11],pch='x')
points(raw[,2],raw[,12]/raw[,13],pch='x')
points(raw[,2],raw[,14]/raw[,15],pch='x',col='red')
points(raw[,2],raw[,16]/raw[,17],pch='x',col='red')
points(raw[,2],raw[,18]/raw[,19],pch='x',col='red')
points(raw[,2],raw[,20]/raw[,21],pch='x',col='red')
par(new = TRUE)
plot(data[,1],data[,7],type='l',ylim=c(0,1))
lines(data[,1],data[,8],type='l',col="red")
lines(data[,1],data[,5],type='l',col="green")
lines(data[,1],data[,6],type='l',col="blue")
plot(raw[,2],raw[,6]/raw[,7],pch='x',ylim=c(0,1))
points(raw[,2],raw[,8]/raw[,9],pch='x')
points(raw[,2],raw[,10]/raw[,11],pch='x')
points(raw[,2],raw[,12]/raw[,13],pch='x')
points(raw[,2],raw[,14]/raw[,15],pch='x',col='red')
points(raw[,2],raw[,16]/raw[,17],pch='x',col='red')
points(raw[,2],raw[,18]/raw[,19],pch='x',col='red')
points(raw[,2],raw[,20]/raw[,21],pch='x',col='red')
par(new = TRUE)
plot(data[,1],data[,7],type='l',ylim=c(0,1))
lines(data[,1],data[,8],type='l',col="red")
lines(data[,1],data[,5],type='l',col="green")
lines(data[,1],data[,6],type='l',col="blue")
plot(data[740:760,1],data[740:760,3])
plot(data[740:760,1],data[740:760,4])
plot(data[,1],data[,7],type='l',ylim=c(0,1))
lines(data[,1],data[,8],type='l',col="red")
lines(data[,1],data[,5],type='l',col="green")
lines(data[,1],data[,6],type='l',col="blue")
plot(data[740:760,1],data[740:760,7],type='l',ylim=c(0,1))
lines(data[740:760,1],data[740:760,8],type='l',col="red")
lines(data[740:760,1],data[740:760,5],type='l',col="green")
lines(data[740:760,1],data[740:760,6],type='l',col="blue")
plot(data[745:755,1],data[740:760,7],type='l',ylim=c(0,1))
lines(data[745:755,1],data[740:760,8],type='l',col="red")
lines(data[745:755,1],data[740:760,5],type='l',col="green")
lines(data[745:755,1],data[740:760,6],type='l',col="blue")
plot(data[745:755,1],data[745:755,7],type='l',ylim=c(0,1))
lines(data[745:755,1],data[745:755,8],type='l',col="red")
lines(data[745:755,1],data[745:755,5],type='l',col="green")
lines(data[745:755,1],data[745:755,6],type='l',col="blue")
hist(data[,4],breaks=100)
hist(data[,3],breaks=100)
View(raw)
load("~/Documents/Transfers/outdrive/Data/Data/temp/ALL/chr1/3000/both/384.infor_inla.RData")
View(for_inla)
setwd("~/Documents/gdrive/workspace/WGBSsim/R")
source("FDR.R")
source("MM3C.R")
library('INLA')
run_INLA_split <- function(d,log_gamma_m,log_gamma_v){
library(INLA)
formula_1=x~indicator+ f(groupb,model="iid") +f(pos1,model="rw1",hyper = list(prec = list(prior="loggamma",param=c(0.1,0.001))))
formula_2=x~indicator+ f(groupb,model="iid") +f(pos2,model="rw1",hyper = list(prec = list(prior="loggamma",param=c(0.1,0.001))))
result_1<-inla(formula_1,data=d[is.na(d$pos2),],family="binomial",Ntrials=d$coverage[is.na(d$pos2)])
result_2<-inla(formula_2,data=d[is.na(d$pos1),],family="binomial",Ntrials=d$coverage[is.na(d$pos1)])
FullLength = length(result_1$summary.random$groupb$mean)
a1<-result_1$summary.random$groupb$mean + result_1$summary.random$pos1$mean
a2<-result_2$summary.random$groupb$mean + result_2$summary.random$pos2$mean
intercept_1=result_1$summary.fixed[[1]][1]
intercept_2=result_2$summary.fixed[[1]][1]
#mean_difference=intercept+result$summary.fixed[[2]]
w2 = a2 + intercept_2
w1 = a1 + intercept_1
probs_a = matrix(data=0,nrow=length(result_1$marginals.random$pos1),ncol=1)
probs_b = matrix(data=0,nrow=length(result_2$marginals.random$pos2),ncol=1)
convert_a = matrix(data=0,nrow=length(result_1$marginals.random$pos1),ncol=1)
convert_b = matrix(data=0,nrow=length(result_2$marginals.random$pos2),ncol=1)
#intercept = matrix(data=intercept,nrow=length(result$marginals.random$pos),ncol=1)
i<-1;
for(name in names(result_1$marginals.random$pos1)){
probs_a[i]<-(inla.emarginal(function(z) exp(z)/(1+exp(z)), marginal=eval(parse(text=paste("result_1$marginals.random$pos1$\'", name, "\'", sep='')))))
i <- i+1;
}
i<-1;
for(name in names(result_2$marginals.random$pos2)){
probs_b[i]<-(inla.emarginal(function(z) exp(z)/(1+exp(z)), marginal=eval(parse(text=paste("result_2$marginals.random$pos2$\'", name, "\'", sep='')))))
i <- i+1;
}
plot(probs_a,ylim=c(0,1),type='l')
lines(probs_b,col=2)
p_esta<-exp(w1)/(1+exp(w1))
p_estb<-exp(w2)/(1+exp(w2))
#print("mlik")
# print(result$mlik)
return(list(probs_a,probs_b,result_1$summary.random$pos1$mean,result_2$summary.random$pos2$mean,p_esta,p_estb,result_1,d,w1,w2,result_1$summary.random$pos1$sd,result_2$summary.random$pos2$sd));
#return(list(p_esta,p_estb,result$summary.random$pos1$mean,result$summary.random$pos2$mean,p_esta,p_estb,intercept_1,intercept_2));
}
run_INLA_split(for_inla,1,0.01)
results<-run_INLA_split(for_inla,1,0.01)
plot(results[[1]])
plot(results[[1]],type='l')
lines(results[[1]],type='l',col="red")
plot(results[[1]],type='l')
lines(results[[2]],type='l',col="red")
plot(results[[1]]+results[[13]],type='l')
run_INLA_split <- function(d,log_gamma_m,log_gamma_v){
library(INLA)
formula_1=x~indicator+ f(groupb,model="iid") +f(pos1,model="rw1",hyper = list(prec = list(prior="loggamma",param=c(0.1,0.001))))
formula_2=x~indicator+ f(groupb,model="iid") +f(pos2,model="rw1",hyper = list(prec = list(prior="loggamma",param=c(0.1,0.001))))
result_1<-inla(formula_1,data=d[is.na(d$pos2),],family="binomial",Ntrials=d$coverage[is.na(d$pos2)])
result_2<-inla(formula_2,data=d[is.na(d$pos1),],family="binomial",Ntrials=d$coverage[is.na(d$pos1)])
FullLength = length(result_1$summary.random$groupb$mean)
a1<-result_1$summary.random$groupb$mean + result_1$summary.random$pos1$mean
a2<-result_2$summary.random$groupb$mean + result_2$summary.random$pos2$mean
intercept_1=result_1$summary.fixed[[1]][1]
intercept_2=result_2$summary.fixed[[1]][1]
#mean_difference=intercept+result$summary.fixed[[2]]
w2 = a2 + intercept_2
w1 = a1 + intercept_1
probs_a = matrix(data=0,nrow=length(result_1$marginals.random$pos1),ncol=1)
probs_b = matrix(data=0,nrow=length(result_2$marginals.random$pos2),ncol=1)
convert_a = matrix(data=0,nrow=length(result_1$marginals.random$pos1),ncol=1)
convert_b = matrix(data=0,nrow=length(result_2$marginals.random$pos2),ncol=1)
#intercept = matrix(data=intercept,nrow=length(result$marginals.random$pos),ncol=1)
i<-1;
for(name in names(result_1$marginals.random$pos1)){
probs_a[i]<-(inla.emarginal(function(z) exp(z)/(1+exp(z)), marginal=eval(parse(text=paste("result_1$marginals.random$pos1$\'", name, "\'", sep='')))))
i <- i+1;
}
i<-1;
for(name in names(result_2$marginals.random$pos2)){
probs_b[i]<-(inla.emarginal(function(z) exp(z)/(1+exp(z)), marginal=eval(parse(text=paste("result_2$marginals.random$pos2$\'", name, "\'", sep='')))))
i <- i+1;
}
plot(probs_a,ylim=c(0,1),type='l')
lines(probs_b,col=2)
p_esta<-exp(w1)/(1+exp(w1))
p_estb<-exp(w2)/(1+exp(w2))
#print("mlik")
# print(result$mlik)
return(list(probs_a,probs_b,result_1$summary.random$pos1$mean,result_2$summary.random$pos2$mean,p_esta,p_estb,result_1,d,w1,w2,result_1$summary.random$pos1$sd,result_2$summary.random$pos2$sd,intercept_1,intercept_2));
#return(list(p_esta,p_estb,result$summary.random$pos1$mean,result$summary.random$pos2$mean,p_esta,p_estb,intercept_1,intercept_2));
}
results<-run_INLA_split(for_inla,1,0.01)
plot(results[[1]]+results[[13]],type='l')
results[[7]]
results[[7]]$summary.random$groupb$mean
run_INLA_negbin_split <- function(d,log_gamma_m,log_gamma_v){
library(INLA)
formula_1=x~indicator+ f(groupb,model="iid") +f(pos1,model="rw1",hyper = list(prec = list(prior="loggamma")))
formula_2=x~indicator+ f(groupb,model="iid") +f(pos2,model="rw1",hyper = list(prec = list(prior="loggamma")))
#result_1<-inla(formula_1,data=d,family="nbinomial", num.threads=35)
#result_2<-inla(formula_2,,data=d,family="nbinomial", num.threads=35)
result_1<-inla(formula_1,data=d[is.na(d$pos2),],family="nbinomial", num.threads=35)
result_2<-inla(formula_2,data=d[is.na(d$pos1),],family="nbinomial", num.threads=35)
FullLength = length(result_1$summary.random$groupb$mean)
a1<-result_1$summary.random$groupb$mean + result_1$summary.random$pos1$mean
a2<-result_2$summary.random$groupb$mean + result_2$summary.random$pos2$mean
intercept_1=result_1$summary.fixed[[1]][1]
intercept_2=result_2$summary.fixed[[1]][1]
#mean_difference=intercept+result$summary.fixed[[2]]
w2 = a2 + intercept_2
w1 = a1 + intercept_1
probs_a = matrix(data=0,nrow=length(result_1$marginals.random$pos1),ncol=1)
probs_b = matrix(data=0,nrow=length(result_2$marginals.random$pos2),ncol=1)
#intercept = matrix(data=intercept,nrow=length(result$marginals.random$pos),ncol=1)
i<-1;
for(name in names(result_1$marginals.random$pos1)){
probs_a[i]<-(inla.emarginal(function(z) exp(z)/(1+exp(z)), marginal=eval(parse(text=paste("result_1$marginals.random$pos1$\'", name, "\'", sep='')))+intercept_1+result_1$summary.random$groupb$mean[i]))
i <- i+1;
}
i<-1;
for(name in names(result_2$marginals.random$pos2)){
probs_b[i]<-(inla.emarginal(function(z) exp(z)/(1+exp(z)), marginal=eval(parse(text=paste("result_2$marginals.random$pos2$\'", name, "\'", sep='')))+intercept_2+result_1$summary.random$groupb$mean[i]))
i <- i+1;
}
plot(probs_a,ylim=c(0,1),type='l')
lines(probs_b,col=2)
p_esta<-exp(w1)/(1+exp(w1))
p_estb<-exp(w2)/(1+exp(w2))
#print("mlik")
# print(result$mlik)
return(list(probs_a,probs_b,result_1$summary.random$pos1$mean,result_2$summary.random$pos2$mean,p_esta,p_estb,result_1,d,w1,w2,result_1$summary.random$pos1$sd,result_2$summary.random$pos2$sd));
#return(list(p_esta,p_estb,result$summary.random$pos1$mean,result$summary.random$pos2$mean,p_esta,p_estb));
}
results<-run_INLA_split(for_inla,1,0.01)
plot(results[[1]],type='l')
lines(results[[2]],type='l',col="red")
results[[7]]$marginals.random$pos1$index.1
plot(results[[7]]$marginals.random$pos1$index.1)
plot(results[[7]]$marginals.random$pos1$index.1+results[[13]])
plot(results[[7]]$marginals.random$pos1$index.1)
plot(results[[7]]$marginals.random$pos1$index.1,type=';')
plot(results[[7]]$marginals.random$pos1$index.1,type='l')
lines(results[[7]]$marginals.random$pos1$index.1+results[[13]],col="red")
plot(results[[7]]$marginals.random$pos1$index.1+results[[13]],col="red")
plot(results[[7]]$marginals.random$pos1$index.1,type='l')
plot(results[[7]]$marginals.random$pos1$index.1,type='l',ylim=c(0,10))
plot(results[[7]]$marginals.random$pos1$index.1+results[[13]],col="red")
plot(results[[7]]$marginals.random$pos1$index.1,type='l',ylim=c(0,10))
lines(results[[7]]$marginals.random$pos1$index.1+results[[13]],col="red")
plot(results[[7]]$marginals.random$pos1$index.1,type='l',ylim=c(0,10))
plot(results[[7]]$marginals.random$pos1$index.1,type='l')
results[[13]]
results[[7]]$summary.random$groupb$mean[1]
results[[7]]$summary.random$pos1$mean[1]
results[[7]]$marginals.random$pos1$index.1
test<-results[[7]]$summary.random$pos1$mean[1]
test[,2]<-test[,2]+results[[13]]
test[,2]
test
test<-results[[7]]$marginals.random$pos1$index.1
test[,2]<-test[,2]+results[[13]]
lines(test,col='red')
plot(test,col='red')
test<-results[[7]]$marginals.random$pos1$index.1
test[,1]<-test[,1]+results[[13]]
lines(test,col='black')
plot(test)
lines(results[[7]]$marginals.random$pos1$index.1,col='red')
run_INLA_negbin_split <- function(d,log_gamma_m,log_gamma_v){
library(INLA)
formula_1=x~indicator+ f(groupb,model="iid") +f(pos1,model="rw1",hyper = list(prec = list(prior="loggamma")))
formula_2=x~indicator+ f(groupb,model="iid") +f(pos2,model="rw1",hyper = list(prec = list(prior="loggamma")))
#result_1<-inla(formula_1,data=d,family="nbinomial", num.threads=35)
#result_2<-inla(formula_2,,data=d,family="nbinomial", num.threads=35)
result_1<-inla(formula_1,data=d[is.na(d$pos2),],family="nbinomial", num.threads=35)
result_2<-inla(formula_2,data=d[is.na(d$pos1),],family="nbinomial", num.threads=35)
FullLength = length(result_1$summary.random$groupb$mean)
a1<-result_1$summary.random$groupb$mean + result_1$summary.random$pos1$mean
a2<-result_2$summary.random$groupb$mean + result_2$summary.random$pos2$mean
intercept_1=result_1$summary.fixed[[1]][1]
intercept_2=result_2$summary.fixed[[1]][1]
#mean_difference=intercept+result$summary.fixed[[2]]
w2 = a2 + intercept_2
w1 = a1 + intercept_1
probs_a = matrix(data=0,nrow=length(result_1$marginals.random$pos1),ncol=1)
probs_b = matrix(data=0,nrow=length(result_2$marginals.random$pos2),ncol=1)
#intercept = matrix(data=intercept,nrow=length(result$marginals.random$pos),ncol=1)
i<-1;
for(name in names(result_1$marginals.random$pos1)){
marginal_dist<-eval(parse(text=paste("result_1$marginals.random$pos1$\'", name, "\'", sep='')))
marginal_dist[,1]<-marginal_dist[,1]+intercept_1+result_1$summary.random$groupb$mean[i]
probs_a[i]<-(inla.emarginal(function(z) exp(z)/(1+exp(z)), marginal=marginal_dist))
i <- i+1;
}
i<-1;
for(name in names(result_2$marginals.random$pos2)){
marginal_dist<-eval(parse(text=paste("result_2$marginals.random$pos2$\'", name, "\'", sep='')))
marginal_dist[,1]<-marginal_dist[,1]+intercept_2+result_2$summary.random$groupb$mean[i]
probs_b[i]<-(inla.emarginal(function(z) exp(z)/(1+exp(z)), marginal=marginal_dist))
i <- i+1;
}
plot(probs_a,ylim=c(0,1),type='l')
lines(probs_b,col=2)
p_esta<-exp(w1)/(1+exp(w1))
p_estb<-exp(w2)/(1+exp(w2))
#print("mlik")
# print(result$mlik)
return(list(probs_a,probs_b,result_1$summary.random$pos1$mean,result_2$summary.random$pos2$mean,p_esta,p_estb,result_1,d,w1,w2,result_1$summary.random$pos1$sd,result_2$summary.random$pos2$sd));
#return(list(p_esta,p_estb,result$summary.random$pos1$mean,result$summary.random$pos2$mean,p_esta,p_estb));
}
results<-run_INLA_split(for_inla,1,0.01)
run_INLA_negbin_split <- function(d,log_gamma_m,log_gamma_v){
library(INLA)
formula_1=x~indicator+ f(groupb,model="iid") +f(pos1,model="rw1",hyper = list(prec = list(prior="loggamma")))
formula_2=x~indicator+ f(groupb,model="iid") +f(pos2,model="rw1",hyper = list(prec = list(prior="loggamma")))
#result_1<-inla(formula_1,data=d,family="nbinomial", num.threads=35)
#result_2<-inla(formula_2,,data=d,family="nbinomial", num.threads=35)
result_1<-inla(formula_1,data=d[is.na(d$pos2),],family="nbinomial", num.threads=35)
result_2<-inla(formula_2,data=d[is.na(d$pos1),],family="nbinomial", num.threads=35)
FullLength = length(result_1$summary.random$groupb$mean)
a1<-result_1$summary.random$groupb$mean + result_1$summary.random$pos1$mean
a2<-result_2$summary.random$groupb$mean + result_2$summary.random$pos2$mean
intercept_1=result_1$summary.fixed[[1]][1]
intercept_2=result_2$summary.fixed[[1]][1]
#mean_difference=intercept+result$summary.fixed[[2]]
w2 = a2 + intercept_2
w1 = a1 + intercept_1
probs_a = matrix(data=0,nrow=length(result_1$marginals.random$pos1),ncol=1)
probs_b = matrix(data=0,nrow=length(result_2$marginals.random$pos2),ncol=1)
#intercept = matrix(data=intercept,nrow=length(result$marginals.random$pos),ncol=1)
i<-1;
for(name in names(result_1$marginals.random$pos1)){
marginal_dist<-eval(parse(text=paste("result_1$marginals.random$pos1$\'", name, "\'", sep='')))
plot(marginal_dist)
marginal_dist[,1]<-marginal_dist[,1]+intercept_1+result_1$summary.random$groupb$mean[i]
lines(marginal_dist,col="red")
probs_a[i]<-(inla.emarginal(function(z) exp(z)/(1+exp(z)), marginal=marginal_dist))
i <- i+1;
}
i<-1;
for(name in names(result_2$marginals.random$pos2)){
marginal_dist<-eval(parse(text=paste("result_2$marginals.random$pos2$\'", name, "\'", sep='')))
plot(marginal_dist)
marginal_dist[,1]<-marginal_dist[,1]+intercept_2+result_2$summary.random$groupb$mean[i]
probs_b[i]<-(inla.emarginal(function(z) exp(z)/(1+exp(z)), marginal=marginal_dist))
lines(marginal_dist,col="red")
i <- i+1;
}
plot(probs_a,ylim=c(0,1),type='l')
lines(probs_b,col=2)
p_esta<-exp(w1)/(1+exp(w1))
p_estb<-exp(w2)/(1+exp(w2))
#print("mlik")
# print(result$mlik)
return(list(probs_a,probs_b,result_1$summary.random$pos1$mean,result_2$summary.random$pos2$mean,p_esta,p_estb,result_1,d,w1,w2,result_1$summary.random$pos1$sd,result_2$summary.random$pos2$sd));
#return(list(p_esta,p_estb,result$summary.random$pos1$mean,result$summary.random$pos2$mean,p_esta,p_estb));
}
results<-run_INLA_split(for_inla,1,0.01)
run_INLA_split <- function(d,log_gamma_m,log_gamma_v){
library(INLA)
formula_1=x~indicator+ f(groupb,model="iid") +f(pos1,model="rw1",hyper = list(prec = list(prior="loggamma",param=c(0.1,0.001))))
formula_2=x~indicator+ f(groupb,model="iid") +f(pos2,model="rw1",hyper = list(prec = list(prior="loggamma",param=c(0.1,0.001))))
result_1<-inla(formula_1,data=d[is.na(d$pos2),],family="binomial",Ntrials=d$coverage[is.na(d$pos2)])
result_2<-inla(formula_2,data=d[is.na(d$pos1),],family="binomial",Ntrials=d$coverage[is.na(d$pos1)])
FullLength = length(result_1$summary.random$groupb$mean)
a1<-result_1$summary.random$groupb$mean + result_1$summary.random$pos1$mean
a2<-result_2$summary.random$groupb$mean + result_2$summary.random$pos2$mean
intercept_1=result_1$summary.fixed[[1]][1]
intercept_2=result_2$summary.fixed[[1]][1]
#mean_difference=intercept+result$summary.fixed[[2]]
w2 = a2 + intercept_2
w1 = a1 + intercept_1
probs_a = matrix(data=0,nrow=length(result_1$marginals.random$pos1),ncol=1)
probs_b = matrix(data=0,nrow=length(result_2$marginals.random$pos2),ncol=1)
convert_a = matrix(data=0,nrow=length(result_1$marginals.random$pos1),ncol=1)
convert_b = matrix(data=0,nrow=length(result_2$marginals.random$pos2),ncol=1)
#intercept = matrix(data=intercept,nrow=length(result$marginals.random$pos),ncol=1)
i<-1;
for(name in names(result_1$marginals.random$pos1)){
marginal_dist<-eval(parse(text=paste("result_1$marginals.random$pos1$\'", name, "\'", sep='')))
plot(marginal_dist)
marginal_dist[,1]<-marginal_dist[,1]+intercept_1+result_1$summary.random$groupb$mean[i]
lines(marginal_dist,col="red")
probs_a[i]<-(inla.emarginal(function(z) exp(z)/(1+exp(z)), marginal=marginal_dist))
i <- i+1;
}
i<-1;
for(name in names(result_2$marginals.random$pos2)){
marginal_dist<-eval(parse(text=paste("result_2$marginals.random$pos2$\'", name, "\'", sep='')))
plot(marginal_dist)
marginal_dist[,1]<-marginal_dist[,1]+intercept_2+result_2$summary.random$groupb$mean[i]
probs_b[i]<-(inla.emarginal(function(z) exp(z)/(1+exp(z)), marginal=marginal_dist))
lines(marginal_dist,col="red")
i <- i+1;
}
plot(probs_a,ylim=c(0,1),type='l')
lines(probs_b,col=2)
p_esta<-exp(w1)/(1+exp(w1))
p_estb<-exp(w2)/(1+exp(w2))
#print("mlik")
# print(result$mlik)
return(list(probs_a,probs_b,result_1$summary.random$pos1$mean,result_2$summary.random$pos2$mean,p_esta,p_estb,result_1,d,w1,w2,result_1$summary.random$pos1$sd,result_2$summary.random$pos2$sd));
#return(list(p_esta,p_estb,result$summary.random$pos1$mean,result$summary.random$pos2$mean,p_esta,p_estb));
}
results<-run_INLA_split(for_inla,1,0.01)
lines(results[[5]],col='green')
lines(results[[6]],col='blue')
`384.inbinomial` <- read.csv("~/Documents/Transfers/outdrive/Data/Data/temp/ALL/chr1/3000/both/384.inbinomial.bed")
View(`384.inbinomial`)
other<-`384.inbinomial`
head(other)
lines(other[,7],col='cyan')
lines(other[,8],col='dark green')
